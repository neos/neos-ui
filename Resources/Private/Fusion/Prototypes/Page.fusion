//
// Reset some rendering steps of the Neos backend, since the package
// augments the website itself
//
prototype(Neos.Neos:Page) {
    //
    // Disable rendering of the Neos backend
    //
    head {

        javascriptBackendInformation = Neos.Neos.Ui:RenderConfiguration {
            path = 'documentNodeInformation'
            context {
                documentNode = ${documentNode}
                site = ${site}
            }

            @position = 'after javascripts'

            @process.json = ${Json.stringify(value)}
            @process.wrapInJsObject = ${'<script>window[\'@Neos.Neos.Ui:DocumentInformation\']=' + value + '</script>'}
            @if {
                inBackend = ${documentNode.context.inBackend}
            }

            // We need to ensure the JS backend information is always up to date, especially
            // when child nodes change. Otherwise errors like the following might happen:
            // - create a new child (document) node
            // - again visit the parent node
            // - the parent node still has the stale "children" infos (without the newly created child)
            // - thus, the document tree will have the newly created node REMOVED again (visually).
            //
            // as a fix, we ensure that the JS backend information creates an own cache entry, which is flushed
            // whenever children are modified.
            @cache {
                mode = 'cached'
                entryIdentifier {
                    jsBackendInfo = 'javascriptBackendInformation'
                    documentNode = ${documentNode}
                    inBackend = ${documentNode.context.inBackend}
                }
                entryTags {
                    1 = ${Neos.Caching.nodeTag(documentNode)}
                    2 = ${documentNode.context.inBackend ? Neos.Caching.descendantOfTag(documentNode) : null}
                }
            }
        }

        guestFrameApplication = Neos.Fusion:Template {
            @position = 'after javascriptBackendInformation'

            templatePath = 'resource://Neos.Neos.Ui/Private/Templates/Backend/Guest.html'
            compiledResourcePackage = ${Neos.Ui.StaticResources.compiledResourcePackage()}

            sectionName = 'guestFrameApplication'
            @if {
                inBackend = ${documentNode.context.inBackend}
            }
        }
    }

    neosBackendContainer = '<div id="neos-backend-container"></div>'
    neosBackendContainer.@position = 'before closingBodyTag'
    neosBackendContainer.@if.inBackend = ${documentNode.context.inBackend}

    @exceptionHandler = 'Neos\\Neos\\Ui\\Fusion\\ExceptionHandler\\PageExceptionHandler'
}

prototype(Neos.Fusion:GlobalCacheIdentifiers) {
    presetBaseNodeType = ${request.arguments.presetBaseNodeType}
}
