.applicationWrapper {
    height: 100vh;
}

.app {
    height: 100%;
    display: grid;
    grid-template-areas:
        "primaryToolbar primaryToolbar primaryToolbar"
        "leftSideBarHeader secondaryToolbar rightSidebar"
        "leftSidebar content rightSidebar";
    grid-template-rows: 41px 41px 1fr;
    grid-template-columns: min-content 1fr min-content;
}

/* FIXME: This would be much easier to implement with actual css-variables (which we cannot use yet due to the postcss conversion) */
.app--leftSidebarIsHidden {
    grid-template-columns: 0 1fr min-content;
}

.app--rightSidebarIsHidden {
    grid-template-columns: min-content 1fr 0;
}

.app--leftSidebarIsHidden.app--rightSidebarIsHidden {
    grid-template-columns: 0 1fr 0;
}

.app--isFullScreen {
    grid-template-rows: 0 41px 1fr;
    grid-template-columns: 0 1fr 0;
}

/* stylelint-disable selector-max-id */

/* Scrollbar styles for appContainer, its siblings (needed for React portals) and also for contentcanvas' body */
:global #appContainer ::-webkit-scrollbar,
:global #appContainer ~ * ::-webkit-scrollbar,
:global body::-webkit-scrollbar {
    width: 4px;
    height: 4px;
}
:global #appContainer ::-webkit-scrollbar-track,
:global #appContainer ~ * ::-webkit-scrollbar-track,
:global body::-webkit-scrollbar-track {
    background-color: transparent;
}
:global #appContainer ::-webkit-scrollbar-thumb,
:global #appContainer ~ * ::-webkit-scrollbar-thumb,
:global body::-webkit-scrollbar-thumb {
    background-color: var(--colors-ContrastBright);
}
:global #appContainer ::-webkit-scrollbar-corner,
:global #appContainer ~ * ::-webkit-scrollbar-corner,
:global body::-webkit-scrollbar-corner {
    background-color: var(--colors-ContrastDark);
}
